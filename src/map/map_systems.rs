// const MAP: [u16; 16] = [
//     0b1111111111111111,
//     0b1000001010000101,
//     0b1011100000110101,
//     0b1000111010010001,
//     0b1010001011110111,
//     0b1011101001100001,
//     0b1000100000001101,
//     0b1000001010000101,
//     0b1011100000110101,
//     0b1000111010010001,
//     0b1000001010000101,
//     0b1011100000110101,
//     0b1010001011110111,
//     0b1011101001100001,
//     0b1000100000001101,
//     0b1111111111111111,
// ];

// pub fn map_collision_points(x: f32, y: f32) -> bool {
//     match MAP.get(y as usize) {
//         Some(line) => (line & (0b1 << x as usize)) != 0,
//         _ => true,
//     }
// }
const MAP: [[u8; 16]; 16] = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
];

pub fn map_collision_points(x: f32, y: f32) -> bool {
    match MAP.get(y as usize) {
        Some(row) => match row.get(x as usize) {
            Some(wall) => *wall != 0,
            None => true,
        },
        None => true,
    }
}
